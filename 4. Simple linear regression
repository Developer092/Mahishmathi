import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Sample dataset (can be replaced by user input or CSV)
data = {
    'Hours_Studied': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Marks_Obtained': [35, 40, 50, 55, 60, 65, 70, 75, 80, 85]
}
df = pd.DataFrame(data)

# Features and Target
X = df[['Hours_Studied']]  # independent variable
y = df['Marks_Obtained']   # dependent variable

# Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Model Training
model = LinearRegression()
model.fit(X_train, y_train)

# Prediction
y_pred = model.predict(X_test)

# Evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Outputs
print("✅ Coefficient (Slope):", model.coef_[0])
print("✅ Intercept:", model.intercept_)
print("✅ Mean Squared Error:", mse)
print("✅ R2 Score:", r2)

# Visualization
plt.scatter(X, y, color='red', label="Actual Marks")
plt.plot(X, model.predict(X), color='blue', label="Regression Line")
plt.xlabel('Hours Studied')
plt.ylabel('Marks Obtained')
plt.title('Simple Linear Regression')
plt.legend()
plt.grid(True)
plt.show()
